_momentum = _fixedA*_qdot_rev;	
_momentum_dot_est = _torque_rev + _C_T*_qdot_rev - _torque_Gravity - _torque_fric_est + _torque_ext_est;
_momentum_est =  _momentum_est + _momentum_dot_est*_dT;
_torque_ext_est = _Lgain*(_momentum - _momentum_est);
_force_ext_est = _L_J_T_inv*_torque_ext_est;

float VelLowpassFilter(double rT, float rWn, float rQ_pre, float rQ, float rVel_pre)
{
	float rA;
	float rB;
	float rC;
	float rD;

	float rVel;

	rA = 2.0 * rWn;
	rB = (-2.0) * rWn;
	rC = 2.0 + rT * rWn;
	rD = rT * rWn - 2.0;

	rVel = ((-(rD)) * rVel_pre + (rA) * rQ + (rB) * rQ_pre)/(rC);

	return(rVel);
}

double LowPassFilter(double dT, double Wc, double X, double preY) //sampling time, cutoff freq, input, previous output
{
	double tau = 1.0/Wc	;
	double y= tau/(tau+dT)*preY + dT/(tau+dT)*X;
	return y;
}